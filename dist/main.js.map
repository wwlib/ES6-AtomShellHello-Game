{"version":3,"sources":["main.js"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["/**\n * Created by andrew on 4/6/15.\n */\nimport Sprite from'./game/sprite';\nimport Input from './game/input';\nimport BouncingObject from './game/bouncingObject';\nimport SoundManager from './game/soundManager';\nimport Player from './game/player';\nimport Game from './game/game';\n\n\nvar input = new Input();\nvar keyATriggered = false;\nvar keyBTriggered = false;\nvar keySpaceTriggered = false;\n\n// **** CANVAS ****\n\nvar canvas = document.getElementById(\"space-game-canvas\");\nconsole.log(\"New: Canvas: \" + canvas);\n\nvar canvas_context = canvas.getContext(\"2d\");\nconsole.log(\"canvas: \" + canvas + \", \" + canvas_context);\n\nvar spriteCount = 4;\nvar crystal_sprite = new Sprite(\"crystal\", null, 20, 20);\ncrystal_sprite.load(\"./images/crystal.png\", onSpriteReady);\n\nvar player_sprite = new Sprite(\"player\", null, 20, 20);\nplayer_sprite.load(\"./images/player.png\", onSpriteReady);\n\nvar debris_sprite = new Sprite(\"debris\", null, 20, 20);\ndebris_sprite.load(\"./images/debris.png\", onSpriteReady);\n\nvar bullet_sprite = new Sprite(\"bullet\", null, 20, 20);\nbullet_sprite.load(\"./images/bullet.png\", onSpriteReady);\n\nvar spritesLoaded = 0;\nvar game = null;\n\n// **** MAIN LOOP ****\n\nfunction step(timestamp) {\n\n    canvas_context.clearRect(0, 0, canvas.width, canvas.height);\n\n    if (!game && spritesLoaded == spriteCount) {\n        game = new Game(canvas_context, player_sprite, debris_sprite, crystal_sprite, bullet_sprite);\n    } else if (game) {\n\n        if (!keyATriggered && input.isDown(\"A\")) {\n            console.log(\"A is pressed\");\n            //player.moveTo(200, 200);\n            keyATriggered = true;\n            keyBTriggered = false;\n            scheduleAudio();\n            game.warp();\n        }\n\n        if (!keyBTriggered && input.isDown(\"B\")) {\n            console.log(\"B is pressed\");\n            keyBTriggered = true;\n            keyATriggered = false;\n            SoundManager.stopAllSounds();\n        }\n\n        if (!keySpaceTriggered && input.isDown(\"SPACE\")) {\n            keySpaceTriggered = true;\n            game.shoot();\n        } else if (!input.isDown(\"Space\")) {\n            keySpaceTriggered = false;\n        }\n\n        if (input.isDown(\"LEFT\")) {\n            game.left();\n        }\n\n        if (input.isDown(\"RIGHT\")) {\n            game.right();\n        }\n\n        game.update(timestamp);\n        game.render();\n    }\n\n    window.requestAnimationFrame(step);\n}\n\nwindow.requestAnimationFrame(step);\n\n// **** AUDIO ****\n\nvar audioContext = new window.AudioContext();\nif (!audioContext.createGain)\n    audioContext.createGain = audioContext.createGainNode;\nif (!audioContext.createDelay)\n    audioContext.createDelay = audioContext.createDelayNode;\nif (!audioContext.createScriptProcessor)\n    audioContext.createScriptProcessor = audioContext.createJavaScriptNode;\n\nSoundManager.init(audioContext);\nSoundManager.loadSounds({\n    kick: './audio/kick.wav',\n    snare: './audio/snare.wav',\n    hihat: './audio/hihat.wav',\n    shoot: './audio/shoot.wav',\n    explosion: './audio/explosion.wav'\n}, onAudioReady);\n\nfunction onAudioReady() {\n    console.log(\"onAudioReady: buffers: \" + SoundManager.buffers);\n}\n\n// scheduleAudio demonstrates the ability to schedule time-accurate audio events\n// by initiating a kick, snare, hihat rhythm for 4 bars\n// USe the A and B keys to start and stop the rhythm\nfunction scheduleAudio() {\n\n    var startTime = audioContext.currentTime;// + 0.100;\n    var tempo = 160; // BPM (beats per minute)\n    var eighthNoteTime = (60 / tempo) / 2;\n\n    // Play 2 bars of the following:\n    for (var bar = 0; bar < 4; bar++) {\n        var time = startTime + bar * 8 * eighthNoteTime;\n        // Play the bass (kick) drum on beats 1, 5\n        SoundManager.playSoundWithIdAndTime(\"kick\", time);\n        SoundManager.playSoundWithIdAndTime(\"kick\", time + 4 * eighthNoteTime);\n\n        // Play the snare drum on beats 3, 7\n        SoundManager.playSoundWithIdAndTime(\"snare\", time + 2 * eighthNoteTime);\n        SoundManager.playSoundWithIdAndTime(\"snare\", time + 6 * eighthNoteTime);\n\n        // Play the hi-hat every eighthh note.\n        for (var i = 0; i < 8; ++i) {\n            SoundManager.playSoundWithIdAndTime(\"hihat\", time + i * eighthNoteTime);\n        }\n    }\n}\n\n// Counts the # of sprites that have been succesfully loaded\n// Poor man's asset manager\nfunction onSpriteReady(sprite) {\n    console.log(\"onSpriteReady: \" + sprite.id);\n    spritesLoaded++;\n}"],"sourceRoot":"/source/"}