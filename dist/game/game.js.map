{"version":3,"sources":["game/game.js"],"names":[],"mappings":"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","file":"game/game.js","sourcesContent":["/**\n * Created by andrew on 4/7/15.\n */\n\nimport Sprite from './sprite';\nimport Player from './player';\nimport Bullet from './bullet';\nimport Enemy from './enemy';\nimport BouncingObject from './bouncingObject';\nimport SoundManager from './soundManager';\nimport Rect from './rect';\n\n\nclass Game {\n    constructor(canvas_context, player_sprite, debris_sprite, crystal_sprite, bullet_sprite) {\n        this.canvasContext = canvas_context;\n        this.playerSprite = player_sprite;\n        this.debrisSprite = debris_sprite;\n        this.crystalSprite = crystal_sprite;\n        this.bulletSprite = bullet_sprite;\n\n        this.player = new Player(this.playerSprite, 50, 530, {\"x\":0, \"y\":0});\n        this.crystal = new BouncingObject(this.crystalSprite, 0, 100, null, 3000, 375);\n        this.enemy = new Enemy(this.debrisSprite, 100, 0, {\"x\": 0, \"y\": 1});\n\n        this.gameBoundsRect = new Rect({top: 0, left: 0, width: 630, height: 580});\n        this.enemy.boundsRect = this.gameBoundsRect;\n\n        this.crystalBoundsRect = new Rect({top: 100, left: 0, width: 630, height: 50});\n        this.crystal.boundsRect = this.crystalBoundsRect;\n\n        this.activeBullets = 0;\n        this.maxBullets = 20;\n\n        this.playerBullets = [];\n        this.enemies = [this.enemy];\n        this.crystals = [this.crystal];\n\n        this.lastSpawnTime = 0;\n\n    }\n\n    // Collision Handling\n    collides(a, b) {\n        return a.coords.x < b.coords.x + b.width &&\n            a.coords.x + a.width > b.coords.x &&\n            a.coords.y < b.coords.y + b.height &&\n            a.coords.y + a.height > b.coords.y;\n    }\n\n    handleCollisions() {\n        this.playerBullets.forEach(bullet => {\n            this.enemies.forEach(enemy =>  {\n                if (this.collides(bullet, enemy)) {\n                    enemy.die();\n                    bullet.die();\n                }\n            });\n        });\n\n        this.enemies.forEach(enemy => {\n            if (this.collides(enemy, this.player)) {\n                enemy.die();\n                this.player.die();\n            }\n        });\n\n        this.playerBullets.forEach(bullet => {\n            this.crystals.forEach(crystal =>  {\n                if (this.collides(bullet, crystal)) {\n                    crystal.die();\n                    bullet.die();\n                }\n            });\n        });\n    }\n\n    removeDeadObjects() {\n        var bullets = [];\n        var enemies = [];\n        var crystals = [];\n\n        this.playerBullets.forEach(bullet => {\n            if (bullet.alive) {\n                bullets.push(bullet);\n            }\n        });\n\n        this.playerBullets = bullets;\n\n\n        this.enemies.forEach(enemy => {\n            if (enemy.alive) {\n                enemies.push(enemy);\n            }\n        });\n\n        this.enemies = enemies;\n\n        this.crystals.forEach(crystal => {\n            if (crystal.alive) {\n                crystals.push(crystal);\n            }\n        });\n\n        this.crystals = crystals;\n    }\n\n    update(timestamp) {\n\n        if (this.player.alive) {\n            this.player.update(timestamp);\n        }\n\n        this.enemies.forEach(enemy => {\n            enemy.update(timestamp);\n        });\n\n        this.crystals.forEach(crystal => {\n            crystal.update(timestamp);\n        });\n\n        this.playerBullets.forEach(bullet => {\n            bullet.update(timestamp);\n        });\n\n        this.handleCollisions();\n        this.removeDeadObjects();\n        this.spawnEnemy(timestamp)\n    }\n\n    render() {\n        if (this.player.alive) {\n            this.player.draw(this.canvasContext);\n        }\n\n        this.enemies.forEach(enemy => {\n            enemy.draw(this.canvasContext);\n        });\n\n        this.crystals.forEach(crystal => {\n            crystal.draw(this.canvasContext);\n        });\n\n        this.playerBullets.forEach(bullet => {\n            bullet.draw(this.canvasContext);\n        });\n    }\n\n    warp() {\n        this.player.moveTo(this.gameBoundsRect.right-25, this.gameBoundsRect.bottom - 50);\n    }\n\n    right() {\n        this.player.velocity = {x:5, y:0};\n    }\n\n    left() {\n        this.player.velocity = {x:-5, y:0};\n    }\n\n    shoot() {\n        SoundManager.playSoundWithIdAndTime(\"shoot\", 0);\n\n        if (this.player.alive) {\n            var bulletPosition = this.player.midpoint;\n            var bullet = new Bullet(this.bulletSprite, bulletPosition.x, bulletPosition.y, {\"x\": 0, \"y\": -10});\n            bullet.boundsRect = this.gameBoundsRect;\n\n            this.playerBullets.push(bullet);\n        }\n    }\n\n    spawnEnemy(timestamp) {\n        if (timestamp - this.lastSpawnTime > 2000) {\n            this.lastSpawnTime = timestamp;\n\n            var enemy = new Enemy(this.debrisSprite, 10, 10, {\"x\": 0, \"y\": 1});\n            enemy.boundsRect = this.gameBoundsRect;\n            enemy.randomizeCoords();\n            this.enemies.push(enemy);\n        }\n\n    }\n}\n\nexport default Game;"],"sourceRoot":"/source/"}