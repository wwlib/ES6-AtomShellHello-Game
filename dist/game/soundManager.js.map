{"version":3,"sources":["game/soundManager.js"],"names":[],"mappings":"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","file":"game/soundManager.js","sourcesContent":["/**\n * Created by andrew on 3/28/15.\n */\n\nimport AudioBufferLoader from './audioBufferLoader';\n\nclass SoundManager {\n\n    constructor() {\n    }\n\n    static init(context) {\n        SoundManager.audioContext = context;\n        SoundManager.audioSources = [];\n        SoundManager.buffers = {};\n    }\n\n    static getAudioContext() {\n        return SoundManager.audioContext;\n    }\n\n    static playSoundWithIdAndTime(id, time=0) {\n        var buffer = SoundManager.buffers[id];\n\n        if (buffer && SoundManager.audioContext) {\n            SoundManager.playSound(buffer, time);\n        }\n    }\n\n    static playSound(buffer, time) {\n        var source = SoundManager.audioContext.createBufferSource();\n        source.buffer = buffer;\n        source.connect(SoundManager.audioContext.destination);\n        source[source.start ? 'start' : 'noteOn'](time);\n        SoundManager.audioSources.push(source);\n    }\n\n    static stopAllSounds() {\n        var count = SoundManager.audioSources.length;\n\n        for (var i = 0; i < count; i++) {\n            var source = SoundManager.audioSources[i];\n            try {\n                source.stop();\n            } catch (e) {\n                console.log(\"error: \" + e);\n            }\n        }\n        SoundManager.audioSources = [];\n    }\n\n    static loadSounds(soundMap, callback) {\n        // Array-ify\n        var names = [];\n        var paths = [];\n\n        for (var name in soundMap) {\n            var path = soundMap[name];\n            names.push(name);\n            paths.push(path);\n            //console.log(\"loadSounds: \" + name + \", \" + path);\n        }\n\n        var bufferLoader = new AudioBufferLoader(SoundManager.audioContext, paths, function (bufferList) {\n            for (var i = 0; i < bufferList.length; i++) {\n                var buffer = bufferList[i];\n                var name = names[i];\n                //console.log(\"Adding buffer: \" + name);\n                SoundManager.buffers[name] = buffer;\n            }\n            if (callback) {\n                callback();\n            }\n        });\n\n        bufferLoader.load();\n    }\n}\n\nSoundManager.audioContext = null;\nSoundManager.audioSources = null;\nSoundManager.buffers = null;\n\nexport default SoundManager;\n\n"],"sourceRoot":"/source/"}